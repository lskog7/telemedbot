from bot_requests import Requests
from datetime import datetime
from telebot import types
class Texts:

    @staticmethod
    def bot_info_text():
        text = '''<b>–û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞</b>\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞! ü§ñ

–Ø —á–∞—Ç-–±–æ—Ç, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º. –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –∏ —è –ø–æ–º–æ–≥—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–µ–ª–µ–≤–æ–≥–æ –≤—Ä–∞—á–∞ –¥–ª—è –≤–∞—à–µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è. <b> –ú–æ—è —Ü–µ–ª—å - –æ–±–µ—Å–ø–µ—á–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—É—é –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å –∫ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –ø–æ–º–æ—â–∏. </b> –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º!

–Ø —Å–æ–∑–¥–∞–Ω –Ω–∞ —Ö–∞–∫–∞—Ç–æ–Ω–µ –≤ —Ä–∞–º–∫–∞—Ö IV –û—Ç–∫—Ä—ã—Ç–æ–π –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ –º–æ–ª–æ–¥—ã—Ö —É—á–µ–Ω—ã—Ö –¶–µ–Ω—Ç—Ä–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ —Ç–µ–ª–µ–º–µ–¥–∏—Ü–∏–Ω—ã (03-04 –∞–ø—Ä–µ–ª—è 2024 –≥.)'''
        return text

    @staticmethod
    def hello_text():
        text = '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø - –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –≤–∏–∑–∏—Ç–∞ –∫ –≤—Ä–∞—á—É. –ß—Ç–æ–±—ã –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ, –º–Ω–µ –Ω—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤.'
        return text



class Utilities:

    @staticmethod
    def user_sex_and_age(sex, b_date):
        if sex == '–ú—É–∂—Å–∫–æ–π':
            sex = '–º—É–∂—á–∏–Ω–∞'
        else:
            sex = '–∂–µ–Ω—â–∏–Ω–∞'
        current_date = datetime.now()
        age = current_date.year - b_date.year - (
                (current_date.month, current_date.day) < (b_date.month, b_date.day))
        if (age % 10 == 1) and (age != 11) and (age != 111):
            return f'{sex} –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ {age} –≥–æ–¥–∞'
        else:
            return f'{sex} –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ {age} –ª–µ—Ç'

    @staticmethod
    def small_keyboard(keyboard_type):
        keyboard = types.InlineKeyboardMarkup()
        if keyboard_type == 'name':
            keyboard.add(types.InlineKeyboardButton(text='–î–∞', callback_data='yes_name'),
                         types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='no_name'))
        if keyboard_type == 'sex':
            keyboard.add(types.InlineKeyboardButton(text='–ú—É–∂—Å–∫–æ–π', callback_data='sex_male'),
                         types.InlineKeyboardButton(text='–ñ–µ–Ω—Å–∫–∏–π', callback_data='sex_female'))
        if keyboard_type == 'parameters':
            keyboard.add(types.InlineKeyboardButton(text='–ú—É–∂—Å–∫–æ–π', callback_data='edit_sex_male'),
                         types.InlineKeyboardButton(text='–ñ–µ–Ω—Å–∫–∏–π', callback_data='edit_sex_female'))
        return keyboard

    @staticmethod
    def calculate_bmi(weight, height):
        # –†–∞—Å—á–µ—Ç –ò–ú–¢
        try:
            bmi = round(float(weight) / (float(height)/100 ** 2), 2)
            bmi_result = f'{bmi}–± –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–∏–ø–∞ —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏—è –ø–æ –ò–ú–¢ - '
            if bmi < 16:
                bmi_result += '–≤—ã—Ä–∞–∂–µ–Ω–Ω–∞—è —Ö—É–¥–æ—â–∞–≤–æ—Å—Ç—å'
            elif 16 <= bmi < 17:
                bmi_result += '—É–º–µ—Ä–µ–Ω–Ω–∞—è —Ö—É–¥–æ—â–∞–≤–æ—Å—Ç—å'
            elif 17 <= bmi < 18.5:
                bmi_result += '–ª—ë–≥–∫–∞—è —Ö—É–¥–æ—â–∞–≤–æ—Å—Ç—å'
            elif 18.5 <= bmi < 25:
                bmi_result += '–Ω–æ—Ä–º–∞–ª—å–Ω—ã–π –≤–µ—Å'
            elif 25 <= bmi < 30:
                bmi_result += '–ø—Ä–µ–æ–∂–∏—Ä–µ–Ω–∏–µ'
            elif 30 <= bmi < 35:
                bmi_result += '–æ–∂–∏—Ä–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ I'
            elif 35 <= bmi < 40:
                bmi_result += '–æ–∂–∏—Ä–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ II'
            else:
                bmi_result += '–æ–∂–∏—Ä–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ III'
            return bmi_result
        except ValueError:
            return 0

    @staticmethod
    def patient_result(list_of_specialists):
        text = '–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–ª–µ–¥—É—é—â–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º:\n'
        for specialist in list_of_specialists:
            text += '<b>' + specialist + '</b>' + '\n'
        text += '–¢–∞–∫–∂–µ –∫–∞–∂–¥–æ–º—É –≤—Ä–∞—á—É —É–∂–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –í–∞—à–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏'
        return text

    @staticmethod
    def doctors_result(user, dictionary):
        name, surname, patronymic, sex, date_of_birth = Requests.get_user_info(user)
#         for doctor in dictionary:
#             text = f'–ö –í–∞–º –Ω–∞ –ø—Ä–∏–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω(–∞) {surname} {name} {patronymic}, {Utilities.user_sex_and_age(sex, date_of_birth)}, –ò–ú–¢ - {Utilities.calculate_bmi()}
# –°–æ–≥–ª–∞—Å–Ω–æ –¥–∞–Ω–Ω—ã–º –∏–∑ --(–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ü–û)--:'
